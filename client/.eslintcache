[{"/Users/test/Desktop/nodeConnect/devConnect/client/src/App.js":"1","/Users/test/Desktop/nodeConnect/devConnect/client/src/reportWebVitals.js":"2","/Users/test/Desktop/nodeConnect/devConnect/client/src/index.js":"3","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/layout/Navbar.js":"4","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/layout/Footer.js":"5","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/layout/Landing.js":"6","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/auth/Login.js":"7","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/auth/Register.js":"8","/Users/test/Desktop/nodeConnect/devConnect/client/src/store.js":"9","/Users/test/Desktop/nodeConnect/devConnect/client/src/reducers/authReducer.js":"10","/Users/test/Desktop/nodeConnect/devConnect/client/src/actions/authActions.js":"11","/Users/test/Desktop/nodeConnect/devConnect/client/src/actions/types.js":"12","/Users/test/Desktop/nodeConnect/devConnect/client/src/reducers/index.js":"13","/Users/test/Desktop/nodeConnect/devConnect/client/src/reducers/errorReducer.js":"14","/Users/test/Desktop/nodeConnect/devConnect/client/src/validation/is-empty.js":"15","/Users/test/Desktop/nodeConnect/devConnect/client/src/utils/setAuthToken.js":"16","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/common/TextFieldGroup.js":"17","/Users/test/Desktop/nodeConnect/devConnect/client/src/reducers/profileReducer.js":"18","/Users/test/Desktop/nodeConnect/devConnect/client/src/actions/profileActions.js":"19","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/dashboard/Dashboard.js":"20"},{"size":1791,"mtime":1611102138232,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610502254840,"results":"23","hashOfConfig":"22"},{"size":500,"mtime":1610502254838,"results":"24","hashOfConfig":"22"},{"size":1705,"mtime":1611101987557,"results":"25","hashOfConfig":"22"},{"size":227,"mtime":1610515024116,"results":"26","hashOfConfig":"22"},{"size":919,"mtime":1611021061647,"results":"27","hashOfConfig":"22"},{"size":2474,"mtime":1611085750214,"results":"28","hashOfConfig":"22"},{"size":3822,"mtime":1611086037049,"results":"29","hashOfConfig":"22"},{"size":406,"mtime":1610936208785,"results":"30","hashOfConfig":"22"},{"size":504,"mtime":1611005563228,"results":"31","hashOfConfig":"22"},{"size":1534,"mtime":1611005570231,"results":"32","hashOfConfig":"22"},{"size":344,"mtime":1611087035613,"results":"33","hashOfConfig":"22"},{"size":280,"mtime":1611086831585,"results":"34","hashOfConfig":"22"},{"size":256,"mtime":1611001048539,"results":"35","hashOfConfig":"22"},{"size":225,"mtime":1610997297217,"results":"36","hashOfConfig":"22"},{"size":307,"mtime":1610996784985,"results":"37","hashOfConfig":"22"},{"size":1282,"mtime":1611085577242,"results":"38","hashOfConfig":"22"},{"size":620,"mtime":1611105013442,"results":"39","hashOfConfig":"22"},{"size":699,"mtime":1611101964784,"results":"40","hashOfConfig":"22"},{"size":1041,"mtime":1611105348564,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"mgknrf",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},"/Users/test/Desktop/nodeConnect/devConnect/client/src/App.js",[],["91","92"],"/Users/test/Desktop/nodeConnect/devConnect/client/src/reportWebVitals.js",[],["93","94"],"/Users/test/Desktop/nodeConnect/devConnect/client/src/index.js",[],["95","96"],"/Users/test/Desktop/nodeConnect/devConnect/client/src/components/layout/Navbar.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/components/layout/Footer.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/components/layout/Landing.js",["97"],"import React, { useEffect } from \"react\";\nimport \"./landing.css\";\nimport \"./navbarright.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nfunction Landing({ auth, history }) {\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      history.push(\"/dashboard\");\n    }\n  });\n  return (\n    <div className=\"fullLayout\">\n      <br /> <br />\n      <div className=\"fullLayout1\">Developers and Animals;</div>\n      <div className=\"fullLayout2\">One Big Family</div>\n      <div className=\"navbarright\">\n        <Link to=\"/register\" className=\"navbarright MediumSizeNav\">\n          SignUp\n        </Link>{\" \"}\n        <Link to=\"login\" className=\"navbarright MediumSizeNav\">\n          Login\n        </Link>{\" \"}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/auth/Login.js",["98"],"import React, { useState, useEffect } from \"react\";\n\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport \"./auth.css\";\nfunction Login({ loginUser, auth, errorz, history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const handleChange = (e) => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      history.push(\"/dashboard\");\n    }\n    if (errorz) {\n      setErrors(errorz);\n    }\n  });\n  const handleSubmit = (e) => {\n    e.preventDefault(e);\n    const user = {\n      email: email,\n      password: password,\n    };\n    loginUser(user);\n  };\n  return (\n    <div>\n      <div className=\"register\">\n        <Form className=\"min-width\">\n          Login\n          <Form.Group controlId=\"formBasicEmail\">\n            <TextFieldGroup\n              className=\"space1 space\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={handleChange}\n              error={errors.email}\n            ></TextFieldGroup>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <TextFieldGroup\n              className=\"space1 space\"\n              placeholder=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={handleChange}\n              error={errors.password}\n            ></TextFieldGroup>\n          </Form.Group>\n          <Button\n            onClick={handleSubmit}\n            className=\"registerbutton\"\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errorz: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errorz: state.error,\n});\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/auth/Register.js",["99","100"],"import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./auth.css\";\n\nimport { set } from \"mongoose\";\n\nfunction Register({ auth, registerUser, errorz, history }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    if (errorz) {\n      setErrors(errorz);\n    }\n\n    if (auth.isAuthenticated) {\n      history.push(\"/dashboard\");\n    }\n  });\n\n  const handleChange = (e) => {\n    if (e.target.name === \"name\") {\n      setName(e.target.value);\n    } else if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    } else if (e.target.name === \"password2\") {\n      setPassword2(e.target.value);\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault(e);\n    const newUser = {\n      name: name,\n      email: email,\n      password: password,\n      password2: password2,\n    };\n\n    registerUser(newUser, history);\n  };\n  return (\n    <div className=\"fullSize\">\n      <div className=\"register\">\n        <Form className=\"min-width\">\n          Sign Up\n          <Form.Group controlId=\"formBasicName\">\n            <TextFieldGroup\n              className=\"space1 space\"\n              placeholder=\"Enter Name\"\n              name=\"name\"\n              type=\"name\"\n              value={name}\n              onChange={handleChange}\n              error={errors.name}\n            ></TextFieldGroup>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <TextFieldGroup\n              className=\"space1 space\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={handleChange}\n              error={errors.email}\n            ></TextFieldGroup>\n            <Form.Text className=\"text-muted register2\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <TextFieldGroup\n              className=\"space1 space\"\n              placeholder=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={handleChange}\n              error={errors.password}\n            ></TextFieldGroup>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword2\">\n            <TextFieldGroup\n              className=\"space1 space\"\n              placeholder=\"Confirm Password\"\n              name=\"password2\"\n              type=\"password2\"\n              value={password2}\n              onChange={handleChange}\n              error={errors.password2}\n            ></TextFieldGroup>\n          </Form.Group>\n          <Button\n            onClick={handleSubmit}\n            className=\"registerbutton\"\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errorz: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errorz: state.error,\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/Users/test/Desktop/nodeConnect/devConnect/client/src/store.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/reducers/authReducer.js",["101"],"import isEmpty from \"../validation/is-empty\";\nimport { SET_CURRENT_USER } from \"../actions/types\";\nimport { setCurrentUser } from \"../actions/authActions\";\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/test/Desktop/nodeConnect/devConnect/client/src/actions/authActions.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/actions/types.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/reducers/index.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/reducers/errorReducer.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/validation/is-empty.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/utils/setAuthToken.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/components/common/TextFieldGroup.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/reducers/profileReducer.js",[],"/Users/test/Desktop/nodeConnect/devConnect/client/src/actions/profileActions.js",["102"],"import axios from \"axios\";\nimport {\n  GET_PROFILE,\n  PROFILE_LOADING,\n  GET_ERRORS,\n  CLEAR_CURRENT_PROFILE,\n} from \"./types\";\n\n// Get current profile\nexport const getCurrentProfile = () => (dispatch) => {\n  dispatch(setProfileLoading());\n  axios\n    .get(\"/api/profile\")\n    .then((res) =>\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_PROFILE,\n        payload: {},\n      })\n    );\n};\n\n//Profile Loading\nexport const setProfileLoading = () => {\n  return {\n    type: PROFILE_LOADING,\n  };\n};\n\n//Clear profile\nexport const clearCurrentProfile = () => {\n  return {\n    type: CLEAR_CURRENT_PROFILE,\n  };\n};\n","/Users/test/Desktop/nodeConnect/devConnect/client/src/components/dashboard/Dashboard.js",["103"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile } from \"../../actions/profileActions\";\n\nfunction Dashboard({ getCurrentProfile, auth, profile }) {\n  useEffect(() => {\n    getCurrentProfile();\n  });\n  const { user } = useState(auth);\n  const { profile1, loading } = useState(profile);\n\n  let dashboardContent;\n\n  if (profile1 === null || loading) {\n    dashboardContent = <h4>Loading...</h4>;\n  } else {\n    dashboardContent = <h4>Hello</h4>;\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"container\">\n        <div className=\"row\">Dashboard {dashboardContent}</div>\n      </div>\n    </div>\n  );\n}\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"108"},{"ruleId":"106","replacedBy":"109"},{"ruleId":"104","replacedBy":"110"},{"ruleId":"106","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":23,"column":3,"nodeType":"114","endLine":23,"endColumn":12,"suggestions":"118"},{"ruleId":"112","severity":1,"message":"119","line":12,"column":10,"nodeType":"114","messageId":"115","endLine":12,"endColumn":13},{"ruleId":"116","severity":1,"message":"120","line":21,"column":3,"nodeType":"114","endLine":21,"endColumn":12,"suggestions":"121"},{"ruleId":"112","severity":1,"message":"122","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":24},{"ruleId":"112","severity":1,"message":"123","line":5,"column":3,"nodeType":"114","messageId":"115","endLine":5,"endColumn":13},{"ruleId":"112","severity":1,"message":"124","line":10,"column":11,"nodeType":"114","messageId":"115","endLine":10,"endColumn":15},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],["125"],["126"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setErrors'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [auth.isAuthenticated, errorz, history] as a second argument to the useEffect Hook.",["127"],"'set' is defined but never used.","React Hook useEffect contains a call to 'setErrors'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [errorz, auth.isAuthenticated, history] as a second argument to the useEffect Hook.",["128"],"'setCurrentUser' is defined but never used.","'GET_ERRORS' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Add dependencies array: [auth.isAuthenticated, errorz, history]",{"range":"133","text":"134"},"Add dependencies array: [errorz, auth.isAuthenticated, history]",{"range":"135","text":"136"},[927,927],", [auth.isAuthenticated, errorz, history]",[913,913],", [errorz, auth.isAuthenticated, history]"]